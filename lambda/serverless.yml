service: succulent-of-the-day
package:
  individually: true
  excludeDevDependencies: true
custom:
  queue_name: SucculentContentAdded-${self:provider.stage}
  api_name: SucculentContent
provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 256
  versionFunctions: false
  stage: ${opt:stage, 'dev'}
  variableSyntax: "\\${((?!AWS)[ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}"
  environment:
    S3_BUCKET_NAME:
      Ref: SucculentOfTheDay
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - s3:GetObject
        - s3:ListBucket
      Resource:
        Fn::Join: ['', [{ Fn::GetAtt: [SucculentOfTheDay, Arn] }, '/*']]
functions:
  handler:
    handler: custom/index.handler
    package:
      path: custom
      include:
        - custom/index.js
        - custom/lib/**/*.js
      exclude:
        - custom/**/*.test.js
resources:
  Resources:
    SucculentOfTheDay:
      Type: AWS::S3::Bucket
    ReadOnlyImagesPublicAccessPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: SucculentOfTheDay
        PolicyDocument:
          Version: '2012-10-17'
          Id: ReadOnlyImagesPublicAccessPolicy
          Statement:
            Sid: ReadOnlyImagesPublicAccessPolicy-Grant
            Effect: 'Allow'
            Principal: '*'
            Action: ['s3:GetObject']
            Resource:
              Fn::Join:
                - ''
                - [{ Fn::GetAtt: [SucculentOfTheDay, Arn] }, '/images/*']
    SucculentContentAddedQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.queue_name}
        ReceiveMessageWaitTimeSeconds: 20
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      DependsOn: SucculentContentAddedQueue
      Properties:
        Body: ${file(./api/swagger.yaml)}
    SucculentApiDeployment:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
    SucculentApiStage:
      Type: AWS::ApiGateway::Stage
      Properties:
        DeploymentId:
          Ref: SucculentApiDeployment
        RestApiId:
          Ref: ApiGatewayRestApi
        StageName: ${self:provider.stage}
        MethodSettings:
          - HttpMethod: '*'
            LoggingLevel: INFO
            ResourcePath: '/*'
            DataTraceEnabled: true
    ApiGatewaySqsIam:
      Type: AWS::IAM::Role
      Properties:
        Path: /app/all/
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - apigateway.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
        Policies:
          - PolicyName: SucculentApiGatewayIamPolicy-${self:provider.stage}
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Resource:
                    Fn::GetAtt: [SucculentContentAddedQueue, Arn]
                  Action:
                    - 'sqs:SendMessage'
